apiVersion: v1
kind: ConfigMap
metadata:
  name: location-consumer-configmap
data:
  GRPC_LOCATION_SERVICE_HOST: "location-service"
  GRPC_LOCATION_SERVICE_PORT: "5006"
  KAFKA_BOOTSTRAP_SERVERS: "kafka-1:9092"
  KAFKA_TOPIC: "udac-location-topic"
  KAFKA_CONSUMER_GROUP_ID: "udac-location-group"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: location-consumer-app
  name: location-consumer-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: location-consumer-app
  template:
    metadata:
      labels:
        app: location-consumer-app
    spec:
      containers:
      - image: aplacidi/udac-kafka-location-consumer:latest
        name: udac-kafka-location-consumer
        imagePullPolicy: IfNotPresent
        env:
        - name: GRPC_LOCATION_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              name: location-consumer-configmap
              key: GRPC_LOCATION_SERVICE_HOST
        - name: GRPC_LOCATION_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              name: location-consumer-configmap
              key: GRPC_LOCATION_SERVICE_PORT
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: location-consumer-configmap
              key: KAFKA_BOOTSTRAP_SERVERS
        - name: KAFKA_TOPIC
          valueFrom:
            configMapKeyRef:
              name: location-consumer-configmap
              key: KAFKA_TOPIC
        - name: KAFKA_CONSUMER_GROUP_ID
          valueFrom:
            configMapKeyRef:
              name: location-consumer-configmap
              key: KAFKA_CONSUMER_GROUP_ID
      restartPolicy: Always